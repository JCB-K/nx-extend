/* eslint-disable */

import { loadConfig, register } from 'tsconfig-paths'

const config = loadConfig('.')
if (config.resultType === 'failed') {
  console.log('Could not load tsconfig to map paths, aborting.')
  process.exit(1)
}

register({
  baseUrl: config.absoluteBaseUrl,
  paths: config.paths
})

import './pulumi'
export * from './pulumi'

import * as pulumi from '@pulumi/pulumi';

type ExportTypes = typeof import('./pulumi');
type ExportTypesKey = keyof ExportTypes;
type ExportTypesValue<TKey extends ExportTypesKey> = ExportTypes[TKey];

type StrongTypedStackReference = Omit<pulumi.StackReference, 'getOutput' | 'requireOutput'> & {
  getOutput<T extends ExportTypesKey>(name: pulumi.Input<T>): ExportTypesValue<T>;
  requireOutput<T extends ExportTypesKey>(name: pulumi.Input<T>): ExportTypesValue<T>;
};

export function getStackReference() {
  const stack = pulumi.getStack();
  return new pulumi.StackReference(`organization/<%= name %>/${stack}`) as StrongTypedStackReference;
}
