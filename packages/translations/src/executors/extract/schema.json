{
  "version": 2,
  "outputCapture": "direct-nodejs",
  "$schema": "http://json-schema.org/schema",
  "type": "object",
  "title": "Extract translations executor",
  "description": "",
  "properties": {
    "provider": {
      "type": "string",
      "description": "What provider to use, for example: traduora"
    },
    "sourceRoot": {
      "type": "string",
      "description": "Root directory to search in",
      "default": "<projectRoot>"
    },
    "pattern": {
      "type": "string",
      "description": "Pattern to use in the directories",
      "default": "/**/!(*.test).{js,jsx,ts,tsx}"
    },
    "defaultLanguage": {
      "type": "string",
      "description": "Default language of the application"
    },
    "languages": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Languages to export"
    },
    "output": {
      "type": "string",
      "description": "Languages to export",
      "default": "<projectRoot>/src/translations"
    },
    "format": {
      "type": "string",
      "description": "Format of translations output: json or yaml",
      "default": "json"
    },
    "extractor": {
      "type": "string",
      "description": "Extractor to use",
      "default": "formatjs"
    },
    "withLibs": {
      "type": "boolean",
      "description": "Also extract from connected libs.",
      "default": true
    },
    "libPrefix": {
      "type": "string",
      "description": "Prefix the lib should have to match for extraction."
    },
    "libsBlacklist": {
      "type": "array",
      "description": "Libs to blacklist and not extract translations for, comma separated."
    }
  },
  "required": []
}
