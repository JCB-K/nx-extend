name: PR

# Run on all pull requests
on: [ pull_request ]

env:
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:

  prepare-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}

      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

  pr:
    needs: prepare-env
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [ 'build', 'e2e' , 'test']
    steps:
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 20.x

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: cache-node-modules-${{ hashFiles('yarn.lock') }}

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: ./actions/set-shas
        with:
          main-branch-name: master

      - name: GIT config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: nx affected:version
        if: matrix.target == 'build'
        uses: ./actions/run-many
        with:
          target: version

      - name: nx affected:${{ matrix.target }}
        uses: ./actions/run-many
        with:
          target: ${{ matrix.target }}
          parallel: 1
